import { NextResponse } from 'next/server';
import { sendEmail } from '@/lib/sendEmail';

export async function POST(req: Request) {
  const body = await req.json();
  const { name, email, phone, correct, total, testTitle, testPath } = body;

  const clientEmailHtml = `
  <div style="font-family: 'Open Sans', sans-serif; max-width: 600px; margin: 0 auto; border-radius: 8px; overflow: hidden; border: 1px solid #ddd; background-color: #eeeeee;">
    <div style="background-color: #ff6b35; color: white; padding: 24px;">
      <h1 style="margin: 0; font-size: 22px;">üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞!</h1>
    </div>
    <div style="padding: 24px; color: #242424; background-color: #ffffff;">
      <p style="font-size: 16px; margin: 0 0 12px;">–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <strong>${name}</strong>!</p>
      <p style="font-size: 16px; margin: 0 0 12px;">
        –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é <strong>¬´${testTitle}¬ª</strong>.
      </p>
      <p style="font-size: 16px; margin: 0 0 20px;">
        –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: <strong>${correct} –∏–∑ ${total}</strong> –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤.
      </p>

      <div style="margin: 20px 0; padding: 16px; background-color: #ffd5c2; border-left: 4px solid #ff6b35; border-radius: 4px;">
        <p style="margin: 0 0 8px; font-size: 15px;"><strong>–ß—Ç–æ –¥–∞–ª—å—à–µ?</strong></p>
        <ul style="margin: 0; padding-left: 20px; font-size: 15px; line-height: 1.6;">
          <li>–ó–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º—É –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏</li>
          <li>–ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º</li>
          <li>–ü—Ä–æ–π–¥–∏—Ç–µ –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏—é —É–≤–µ—Ä–µ–Ω–Ω–æ</li>
        </ul>
      </div>

      <div style="text-align: center; margin-top: 30px;">
        <a href="${'https://trud-nadzor.laft-agancy.ru/uslugi/' + testPath}"
           style="display: inline-block; width: 300px; background-color: #6ed46e; color: #242424; text-decoration: none; padding: 14px 0; border-radius: 6px; font-weight: 600; font-family: 'Monserrat', sans-serif; text-align: center;">
          –ü–µ—Ä–µ–π—Ç–∏ –∫ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏
        </a>
      </div>
      <div style="text-align: center; margin-top: 16px;">
        <a href="https://trud-nadzor.laft-agancy.ru"
           style="display: inline-block; width: 300px; background-color: #6ed46e; color: #242424; text-decoration: none; padding: 14px 0; border-radius: 6px; font-weight: 600; font-family: 'Monserrat', sans-serif; text-align: center;">
          –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
        </a>
      </div>
    </div>
    <div style="background-color: #3a3a3a; text-align: center; padding: 16px; font-size: 13px; color: #eeeeee;">
      –í—ã –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ –ø–∏—Å—å–º–æ, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ <a href="https://trud-nadzor.laft-agancy.ru" style="color: #6ed46e; text-decoration: none;">–Ω–∞—à–µ–º —Å–∞–π—Ç–µ</a>.
    </div>
  </div>
`;

  const adminEmailHtml = `
  <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; border: 1px solid #e5e7eb; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 8px rgba(0,0,0,0.05);">
    <div style="background-color: #111827; color: #ffffff; padding: 20px;">
      <h2 style="margin: 0; font-size: 20px;">üì• –ü—Ä–æ–π–¥–µ–Ω —Ç–µ—Å—Ç</h2>
    </div>
    <div style="padding: 20px; color: #111827; font-size: 16px; line-height: 1.6;">
      <p><strong>–ò–º—è:</strong> ${name}</p>
      <p><strong>Email:</strong> <a href="mailto:${email}" style="color: #1e40af;">${email}</a></p>
      <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${phone}</p>
      <p><strong>–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</strong> ${testTitle}</p>
      <p><strong>–†–µ–∑—É–ª—å—Ç–∞—Ç:</strong> ${correct} –∏–∑ ${total}</p>
    </div>
    <div style="background-color: #f9fafb; padding: 15px; text-align: center; font-size: 14px; color: #6b7280;">
      –≠—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    </div>
  </div>
`;

  try {
    const [res1, res2] = await Promise.all([
      sendEmail({
        to: email,
        subject: `–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ —Ç–µ—Å—Ç—É "${testTitle}"`,
        html: clientEmailHtml,
      }),
      sendEmail({
        to: process.env.EMAIL_TO!,
        subject: `–ü—Ä–æ–π–¥–µ–Ω —Ç–µ—Å—Ç –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é "${testTitle}"`,
        html: adminEmailHtml,
      }),
    ]);

    if (!res1.success || !res2.success) {
      return NextResponse.json({ success: false, error: 'Failed to send email' }, { status: 500 });
    }

    return NextResponse.json({ success: true, message: 'Emails sent successfully' });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', {
      error: error instanceof Error ? error.message : error,
      email: body.email,
      testTitle: body.testTitle,
    });
    return NextResponse.json({ success: false }, { status: 500 });
  }
}
